# Step 1: Detect Missing Values
print("Missing Values Count Before Imputation:")
print(main.isnull().sum())

# If missing values are significant, decide how to handle them
# Example: Fill missing numerical values with the mean
for col in main.select_dtypes(include=["float", "int"]).columns:
    if main[col].isnull().sum() > 0:  # Check for missing values
        print(f"Filling missing values in '{col}' with mean ({main[col].mean()})")
        main[col].fillna(main[col].mean(), inplace=True)

# Step 2: Detect and Handle Outliers
# Define a function for detecting outliers using the IQR method
def remove_outliers(df, col):
    Q1 = df[col].quantile(0.25)  # First quartile
    Q3 = df[col].quantile(0.75)  # Third quartile
    IQR = Q3 - Q1                # Interquartile range
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    initial_length = len(df)
    df = df[(df[col] >= lower_bound) & (df[col] <= upper_bound)]
    print(f"Removed outliers from '{col}'. Rows reduced from {initial_length} to {len(df)}.")
    return df

# Example: Apply outlier removal to numeric columns
for col in main.select_dtypes(include=["float", "int"]).columns:
    main = remove_outliers(main, col)

# Step 3: Final Check
print("Missing Values Count After Imputation:")
print(main.isnull().sum())
print("DataFrame shape after handling outliers and missing values:",Â main.shape)